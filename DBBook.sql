--Удаляем таблицы если они есть
DROP TABLE IF EXISTS  BOOK;
DROP TABLE IF EXISTS  SERIESBOOK;
DROP TABLE IF EXISTS  AUTHORBOOK;
DROP TABLE IF EXISTS  GENREBOOK;
DROP TABLE IF EXISTS  SERIES;
DROP TABLE IF EXISTS  AUTHOR;
DROP TABLE IF EXISTS  GENRE;
DROP TABLE IF EXISTS  FOLDERS;
DROP TABLE IF EXISTS  QUERIES;

-- Создаем таблицу авторов
CREATE TABLE AUTHOR (
AUTHORID IDENTITY,
NAME VARCHAR_IGNORECASE(512) NOT NULL DEFAULT ''
);

CREATE TABLE LIBRARY (
LIBID IDENTITY,
LIBNAME VARCHAR(64),
PATHTO VARCHAR_IGNORECASE(256),
TYPELIB VARCHAR(16) NOT NULL DEFAULT ''
);

-- Создаем таблицу жанров
CREATE TABLE GENRE (
GENREID IDENTITY,
GENRECOD VARCHAR_IGNORECASE(64),
GENREDESC VARCHAR_IGNORECASE(128),
GENREMETA VARCHAR_IGNORECASE(128)
);

-- Создаем таблицу серий
CREATE TABLE SERIES (
SERIESID IDENTITY,
NAMESERIES VARCHAR_IGNORECASE(256)
);

CREATE TABLE FOLDERS (
FOLDERID IDENTITY,
FOLDER VARCHAR_IGNORECASE(128)
);

-- Создаем таблицу для книг
CREATE TABLE BOOK (
BOOKID IDENTITY,
BOOKTITLE VARCHAR_IGNORECASE(1024) NOT NULL,
FOLDER INT NOT NULL,
FILENAME VARCHAR_IGNORECASE(255) NOT NULL,
FSIZE INT,
COVER VARCHAR_IGNORECASE(64),
ENCODE VARCHAR_IGNORECASE(32)
);

-- ТАБЛИЦА АВТОРОВ С КНИГАМИ
CREATE TABLE AUTHORBOOK (
AUTHORID INT,
BOOKID INT
);

-- Таблица книг по жанрам
CREATE TABLE GENREBOOK (
GENREID INT,
BOOKID INT
);

-- Таблица книг по сериям
CREATE TABLE SERIESBOOK (
SERIESID INT,
BOOKID INT,
ASNUMBER INT
);

-- Таблица SQL-запросов
CREATE TABLE QUERIES (
NAMEQUERY VARCHAR(32),
SQL_QUERY VARCHAR(1024)
);

-- Создание индексов
-- Таблица авторов
CREATE UNIQUE INDEX AUTHOR_NAME_IDX ON AUTHOR(NAME);
-- Таблица жанров
CREATE UNIQUE INDEX GENRECOD_IDX ON GENRE(GENRECOD);
CREATE UNIQUE INDEX GENREDESC_IDX ON GENRE(GENREDESC);
-- Таблица серий
CREATE UNIQUE INDEX NAMESERIES_IDX ON SERIES(NAMESERIES);
-- Таблица каталогов
CREATE UNIQUE INDEX NAMEFOLDER_IDX ON FOLDERS(FOLDER);
-- Таблица книг
CREATE INDEX TITLEIDX ON BOOK(BOOKTITLE);
CREATE UNIQUE INDEX FILE_FOLDER_IDX ON BOOK(FOLDER, FILENAME);
ALTER TABLE BOOK  ADD FOREIGN KEY (FOLDER) REFERENCES FOLDERS(FOLDERID) ON DELETE RESTRICT;
-- ТАБЛИЦА АВТОРОВ С КНИГАМИ
ALTER TABLE AUTHORBOOK ADD FOREIGN KEY (AUTHORID) REFERENCES AUTHOR(AUTHORID) ON DELETE RESTRICT;
ALTER TABLE AUTHORBOOK ADD FOREIGN KEY (BOOKID) REFERENCES BOOK(BOOKID) ON DELETE RESTRICT;
-- Таблица книг по жанрам
ALTER TABLE GENREBOOK ADD FOREIGN KEY (GENREID) REFERENCES GENRE(GENREID) ON DELETE RESTRICT;
ALTER TABLE GENREBOOK ADD FOREIGN KEY (BOOKID) REFERENCES BOOK(BOOKID) ON DELETE RESTRICT;
-- Таблица книг по сериям
ALTER TABLE SERIESBOOK ADD FOREIGN KEY (SERIESID) REFERENCES SERIES(SERIESID) ON DELETE RESTRICT;
ALTER TABLE SERIESBOOK ADD FOREIGN KEY (BOOKID) REFERENCES BOOK(BOOKID) ON DELETE RESTRICT;
-- Таблица SQL-запросов
CREATE UNIQUE INDEX NAME_QUERY_IDX ON QUERIES(NAMEQUERY);

-- SQL-запросы
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('GET_LIB_PARAMS', 'SELECT * FROM LIBRARY');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('GET_BOOK_INFO', 'SELECT * FROM BOOK WHERE BOOKID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('QUERY_BOOK_INFO', 'SELECT BOOK.BOOKTITLE, FOLDERS.FOLDER, BOOK.FILENAME, BOOK.FSIZE, BOOK.COVER, BOOK.ENCODE FROM BOOK JOIN FOLDERS ON FOLDERS.FOLDERID = BOOK.FOLDER and BOOK.BOOKID = ?');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('QUERY_BOOK_AUTHOR', 'SELECT DISTINCT BOOK.BOOKID, BOOK.BOOKTITLE FROM BOOK JOIN AUTHORBOOK ON BOOK.BOOKID = AUTHORBOOK.BOOKID AND AUTHORBOOK.AUTHORID = ? ORDER BY BOOK.BOOKTITLE');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('QUERY_GENRE', 'SELECT GENREDESC FROM GENRE JOIN GENREBOOK ON GENREBOOK.GENREID = GENRE.GENREID AND GENREBOOK.BOOKID = ? ORDER BY GENREDESC');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('QUERY_SERIES', 'SELECT SERIES.NAMESERIES, SERIESBOOK.ASNUMBER FROM SERIES JOIN SERIESBOOK ON SERIESBOOK.SERIESID = SERIES.SERIESID AND SERIESBOOK.BOOKID = ? ORDER BY SERIES.NAMESERIES');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('QUERY_BOOK_GENRE', 'SELECT BOOK.BOOKID, BOOK.BOOKTITLE FROM BOOK JOIN GENREBOOK ON BOOK.BOOKID = GENREBOOK.BOOKID AND GENREBOOK.GENREID = ? ORDER BY BOOK.BOOKTITLE');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('QUERY_AUTHOR', 'SELECT AUTHOR.NAME FROM AUTHOR JOIN AUTHORBOOK ON AUTHORBOOK.AUTHORID = AUTHOR.AUTHORID AND AUTHORBOOK.BOOKID = ? ORDER BY AUTHOR.NAME');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('QUERY_BOOK_SERIES', 'SELECT BOOK.BOOKID, BOOK.BOOKTITLE FROM BOOK JOIN SERIESBOOK ON BOOK.BOOKID = SERIESBOOK.BOOKID AND SERIESBOOK.SERIESID = ? ORDER BY BOOK.BOOKTITLE');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('QUERY_LIST_AUTHOR', 'SELECT * FROM AUTHOR WHERE NAME LIKE ? ORDER BY NAME');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('QUERY_LIST_SERIES', 'SELECT * FROM SERIES WHERE NAMESERIES LIKE ? ORDER BY NAMESERIES');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('QUERY_GENREMETA', 'SELECT DISTINCT GENREMETA FROM GENRE ORDER BY GENREMETA');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('QUERY_GENREDESC', 'SELECT GENREID, GENREDESC FROM GENRE WHERE GENREMETA = ? AND GENREID IN (SELECT DISTINCT GENREID FROM GENREBOOK) ORDER BY GENREDESC');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('AUTHOR_PARAMS', 'SELECT * FROM AUTHOR WHERE AUTHORID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('SERIES_PARAMS', 'SELECT * FROM SERIES WHERE SERIESID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('GENRE_PARAMS', 'SELECT * FROM GENRE WHERE GENREID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('FOLDER_PARAMS', 'SELECT * FROM FOLDERS WHERE FOLDERID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('GET_LIST_AUTHOR', 'SELECT AUTHORID FROM AUTHORBOOK WHERE BOOKID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('GET_LIST_GENRE', 'SELECT GENREID FROM GENREBOOK WHERE BOOKID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('GET_LIST_SERIES', 'SELECT SERIESID, ASNUMBER FROM SERIESBOOK WHERE BOOKID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('NEW_AUTHOR', 'INSERT INTO AUTHOR(AUTHORID, NAME) VALUES(%d, %s)');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('GET_AUTHORID', 'SELECT AUTHORID FROM AUTHOR WHERE NAME = %s');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('DEL_AUTHOR', 'DELETE FROM AUTHOR WHERE AUTHORID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('DEL_BOOK', 'DELETE FROM BOOK WHERE BOOKID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('COUNT_IN_SERIES', 'SELECT COUNT(BOOKID) FROM SERIESBOOK WHERE SERIESID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('COUNT_IN_GENRE', 'SELECT COUNT(BOOKID) FROM GENREBOOK WHERE GENREID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('COUNT_IN_AUTHOR', 'SELECT COUNT(BOOKID) FROM AUTHORBOOK WHERE AUTHORID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('COUNT_IN_FOLDER', 'SELECT COUNT(BOOKID) FROM BOOK WHERE FOLDER = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('COUNT_AUTHORS', 'SELECT COUNT(AUTHIRID) FROM AUTHORBOOK WHERE BOOKID = ?');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('DEL_FROM_GENRE', 'DELETE FROM GENREBOOK WHERE BOOKID = ?');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('DEL_FROM_SERIES', 'DELETE FROM SERIESBOOK WHERE BOOKID = ?');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('DEL_SERIES', 'DELETE FROM SERIES WHERE SERIESID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('DEL_FROM_AUTHOR', 'DELETE FROM AUTHORBOOK WHERE BOOKID = ?');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('GET_FILE', 'SELECT BOOK.FILENAME, FOLDERS.FOLDER, FOLDERS.FOLDERID FROM BOOK, FOLDERS WHERE BOOK.BOOKID = ? AND BOOK.FOLDER = FOLDERS.FOLDERID');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('NEW_GENRE', 'INSERT INTO GENRE(GENREID, GENRECOD, GENREDESC, GENREMETA) VALUES(%d, %s, %s, %s)');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('NEW_SERIES', 'INSERT INTO SERIES(SERIESID, NAMESERIES) VALUES(%d, %s)');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('NEW_FOLDER', 'INSERT INTO FOLDERS(FOLDERID, FOLDER) VALUES(%d, %s)');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('AUTHOR_BOOKS', 'SELECT BOOKID FROM AUTHORBOOK WHERE AUTHORID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('SERIES_BOOKS', 'SELECT BOOKID FROM SERIESBOOK WHERE SERIESID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('GENRE_BOOKS', 'SELECT BOOKID FROM GENREBOOK WHERE GENREID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('GET_SERIESID', 'SELECT SERIESID FROM SERIES WHERE NAMESERIES = %s');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('GET_GENREID', 'SELECT GENREID FROM GENRE WHERE GENRECOD = %s');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('GET_FOLDERID', 'SELECT FOLDERID FROM FOLDERS WHERE FOLDER = %s');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('UPDATE_FILE', 'UPDATE BOOK SET FOLDER = %d, FILENAME = %s WHERE BOOKID  = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('DEL_AUTHORBOOK', 'DELETE FROM AUTHORBOOK WHERE AUTHORID = %d AND BOOKID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('INS_AUTHORBOOK', 'INSERT INTO AUTHORBOOK(AUTHORID, BOOKID) VALUES(%d, %d)');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('DEL_SERIESBOOK', 'DELETE FROM SERIESBOOK WHERE SERIESID = %d AND BOOKID = %d AND ASNUMBER = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('INS_SERIESBOOK', 'INSERT INTO SERIESBOOK(SERIESID, BOOKID, ASNUMBER) VALUES(%d, %d, %d)');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('DEL_GENREBOOK', 'DELETE FROM GENREBOOK WHERE GENREID = %d AND BOOKID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('INS_GENREBOOK', 'INSERT INTO GENREBOOK(GENREID, BOOKID) VALUES(%d, %d)');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('INSERT_BOOK', 'INSERT INTO BOOK(BOOKID, BOOKTITLE, FOLDER, FILENAME, FSIZE, COVER, ENCODE) VALUES(%d, %s, %d, %s, %d, %s, %s)');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('UPDATE_TITLE', 'UPDATE BOOK SET BOOKTITLE = %s WHERE BOOKID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('DEL_FOLDER', 'DELETE FROM FOLDERS WHERE FOLDERID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('CHANGE_AUTHOR', 'UPDATE AUTHOR SET NAME = %s WHERE AUTHORID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('CHANGE_SERIES', 'UPDATE SERIES SET NAMESERIES = %s WHERE SERIESID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('CHANGE_GENRE', 'UPDATE GENRE SET GENRECOD = %s, GENREDESC = %s, GENREMETA = %s WHERE GENREID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('REPLACEMENT_AUTHOR', 'UPDATE AUTHORBOOK SET AUTHORID = %d WHERE AUTHORID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('REPLACEMENT_SERIES', 'UPDATE SERIESBOOK SET SERIESID = %d WHERE SERIESID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('INSERT_INTO_LIBRARY', 'INSERT INTO LIBRARY(LIBID, LIBNAME, PATHTO, TYPELIB) VALUES(%d, %s, %s, %s)');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('UPDATE_PARAMS', 'UPDATE BOOK SET COVER = %s, ENCODE = %s WHERE BOOKID = %d');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('QUERY_BOOK_FILE', 'SELECT BOOKID, BOOKTITLE FROM BOOK WHERE BOOKTITLE LIKE %s AND BOOKID IN (SELECT BOOKID FROM AUTHORBOOK WHERE AUTHORID IN (SELECT AUTHORID FROM AUTHOR WHERE NAME LIKE %s))');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('QUERY_BOOK_TITLE', 'SELECT BOOKTITLE FROM BOOK WHERE BOOKID = ?');
INSERT INTO QUERIES(NAMEQUERY, SQL_QUERY) VALUES('QUERY_BOOKID_TITLE', 'SELECT BOOKID FROM BOOK WHERE BOOKTITLE LIKE %s');